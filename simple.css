
:root {
  /* Set sans-serif & mono fonts */
  --sans-font: -apple-system, BlinkMacSystemFont, "Avenir Next", Avenir,
    "Nimbus Sans L", Roboto, Noto, "Segoe UI", Arial, Helvetica,
    "Helvetica Neue", sans-serif;
  --mono-font: Consolas, Menlo, Monaco, "Andale Mono", "Ubuntu Mono", monospace;

  /* Body font size. By default, effectively 18.4px, based on 16px as 'root em' */
  --base-fontsize: 1.15rem;

  /* Major third scale progression - see https://type-scale.com/ */
  --header-scale: 1.35;

  /* Line height is set to the "Golden ratio" for optimal legibility */
  --line-height: 1.618;

  /* Default (light) theme */
    --bg: #fcfcfa;
    --accent-bg: #5e0d07;
    --text: #212121;
    --text-header: #7c0a02;
    --text-light: #232A39;
    /*--border: #232A39;*/
    --border: #680902;
    --accent: #680902;
    --link: #c29423;
    --accent-light: #ff4040;
    --code: #f06292;
    --preformatted: #ccc;
    --disabled: #111;
  }


*, *::before, *::after {
  box-sizing: border-box;
}

html {
  /* Set the font globally */
  font-family: var(--sans-font);
}

/* Make the body a nice central block */
body {
  color: var(--text);
  background: var(--bg);
  font-size: var(--base-fontsize);
  line-height: var(--line-height);
  text-align: justify;
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  flex: 1;
  margin: 0 auto;
  max-width: 45rem;
  padding: 0 0.5rem;
  overflow-x: hidden;
  word-break: break-word;
  overflow-wrap: break-word;
}

/* Make the header bg full width, but the content inline with body */
header {
  color: var(--bg);
  border-bottom: 1px solid var(--border);
  padding: 0.2rem, 0.2rem;
  background: var(--accent-bg);
  text-align: center;
  width: 100vw;
  position: relative;
  box-sizing: border-box;
  left: 50%;
  right: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
}


/* navigation styles start here */


/* changed this from the tutorial video to
   allow it to gain focus, making it tabbable */
.nav-toggle {
  position: absolute !important;
  top: -9999px !important;
  left: -9999px !important;
}

.nav-toggle:focus ~ .nav-toggle-label {
  outline: 3px solid rgba(lightblue, .75);
}

.nav-toggle-label {
  position: absolute;
  top: 0;
  right: 0;
  margin-right: 1em;
  height: 100%;
  display: flex;
  align-items: center;
}

.nav-toggle-label span,
.nav-toggle-label span::before,
.nav-toggle-label span::after {
  display: block;
  background: var(--bg);
  height: 2px;
  width: 2em;
  border-radius: 2px;
  position: relative;
}

.nav-toggle-label span::before,
.nav-toggle-label span::after {
  content: '';
  position: absolute;
}

.nav-toggle-label span::before {
  bottom: 7px;
}

.nav-toggle-label span::after {
  top: 7px;
}

nav {
  position: absolute;
  text-align: center;
  top: 100%;
  left: 0;
  background: var(--accent-bg);
  color: var(--bg);
  width: 100%;
  transform: scale(1, 0);
  transform-origin: top;
  transition: transform 400ms ease-in-out;
}

nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
  color: var(--bg);
}

nav li {
  margin-bottom: 1em;
  margin-left: 0em;
  color: var(--bg);
}

nav a {
  color: var(--bg);
  text-decoration: none;
  font-size: 1.2rem;
  font-weight: 600;
  text-transform: uppercase;
  opacity: 0;
  transition: opacity 150ms ease-in-out;
}

nav a:hover {
  color: var(--bg);
}

.nav-toggle:checked ~ nav {
  transform: scale(1,1);
}

.nav-toggle:checked ~ nav a {
  opacity: 1;
  transition: opacity 250ms ease-in-out 250ms;
}

.logo img {
    grid-column: 2 / 3;
    max-height: 90px;
    }


@media screen and (min-width: 800px) {
  .nav-toggle-label {
    display: none;
  }

  header {
    display: grid;
    grid-template-columns: 1fr auto minmax(800px, 3fr) 1fr;
  }

  .logo img {
    grid-column: 2 / 3;
    }

  nav {
    // all: unset; /* this causes issues with Edge, since it's unsupported */

    /* the following lines are not from my video, but add Edge support */
    position: relative;
    text-align: left;
    transition: none;
    transform: scale(1,1);
    background: none;
    top: initial;
    left: initial;
    /* end Edge support stuff */

    grid-column: 3 / 4;
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }

  nav ul {
    display: flex;
  }

  nav li {
    margin-left: 2em;
    margin-bottom: 0;
  }

  nav a {
    opacity: 1;
    position: relative;
  }

  nav a::before {
    content: '';
    display: block;
    height: 3px;
    background: var(--link);
    position: absolute;
    bottom: -.35em;
    left: 0;
    right: 0;
    transform: scale(0, 1);
    transition: transform ease-in-out 250ms;
  }

  nav a:hover::before {
    transform: scale(1,1);
  }
}

/* Fix line height when title wraps */
h1,
h2,
h3 {
  line-height: 1.1;
}

footer {
  margin-top: 4rem;
  padding: 2rem 1rem 1.5rem 1rem;
  color: var(--text-light);
  font-size: 0.9rem;
  text-align: center;
  border-top: 1px solid var(--border);
}

/* Format headers */
h1 {
  font-size: calc(
    var(--base-fontsize) * var(--header-scale) * var(--header-scale) *
      var(--header-scale) * var(--header-scale)
  );
  margin-top: calc(var(--line-height) * 0.2rem);
  margin-bottom: calc(var(--line-height) * 0.2rem);

  color: var(--accent-bg);
}

h2 {
  font-size: calc(
    var(--base-fontsize) * var(--header-scale) * var(--header-scale) *
      var(--header-scale)
  );
  margin-top: calc(var(--line-height) * 1.5rem);
}

h3 {
  font-size: calc(
    var(--base-fontsize) * var(--header-scale) * var(--header-scale)
  );
  margin-top: calc(var(--line-height) * 1.5rem);
}

h4 {
  font-size: calc(var(--base-fontsize) * var(--header-scale));
  margin-top: calc(var(--line-height) * 1.5rem);
  margin-bottom: calc(var(--line-height) * 0.2rem);

  color: var(--text);
}

h5 {
  font-size: var(--base-fontsize);
  margin-top: calc(var(--line-height) * 1.5rem);
}

h6 {
  font-size: calc(var(--base-fontsize) / var(--header-scale));
  margin-top: calc(var(--line-height) * 1.5rem);
}

/* Format links & buttons */
a,
a:visited {
  color: var(--link);
}

a:hover {
  text-decoration: none;
  color: var(--accent-bg);
}

a button,
button,
[role="button"],
input[type="submit"],
input[type="reset"],
input[type="button"] {
  border: none;
  border-radius: 5px;
  background: var(--accent);
  font-size: 1rem;
  color: var(--bg);
  padding: 0.7rem 0.9rem;
  margin: 0.5rem 0;
  transition: 0.4s;
}

a button[disabled],
button[disabled],
[role="button"][aria-disabled="true"],
input[type="submit"][disabled],
input[type="reset"][disabled],
input[type="button"][disabled],
input[type="checkbox"][disabled],
input[type="radio"][disabled],
select[disabled] {
  cursor: default;
  opacity: 0.5;
  cursor: not-allowed;
}

input:disabled,
textarea:disabled,
select:disabled {
  cursor: not-allowed;
  background-color: var(--disabled);
}

input[type="range"] {
  padding: 0;
}

/* Set the cursor to '?' while hovering over an abbreviation */
abbr {
  cursor: help;
}

button:focus,
button:enabled:hover,
[role="button"]:focus,
[role="button"]:not([aria-disabled="true"]):hover,
input[type="submit"]:focus,
input[type="submit"]:enabled:hover,
input[type="reset"]:focus,
input[type="reset"]:enabled:hover,
input[type="button"]:focus,
input[type="button"]:enabled:hover,
input[type="checkbox"]:focus,
input[type="checkbox"]:enabled:hover,
input[type="radio"]:focus,
input[type="radio"]:enabled:hover {
  filter: brightness(1.4);
  cursor: pointer;
}

/* Format the expanding box */
details {
  background: var(--accent-bg);
  border: 1px solid var(--border);
  border-radius: 5px;
  margin-bottom: 1rem;
}

summary {
  cursor: pointer;
  font-weight: bold;
  padding: 0.6rem 1rem;
}

details[open] {
  padding: 0.6rem 1rem 0.75rem 1rem;
}

details[open] summary {
  margin-bottom: 0.5rem;
  padding: 0;
}

details[open] > *:last-child {
  margin-bottom: 0;
}

/* Format tables */
table {
  border-collapse: collapse;
  width: 100%;
  margin: 1.5rem 0;
}

td,
th {
  border: 1px solid var(--border);
  text-align: left;
  padding: 0.5rem;
}

th {
  background: var(--accent-bg);
  font-weight: bold;
}

tr:nth-child(even) {
  /* Set every other cell slightly darker. Improves readability. */
  background: var(--accent-bg);
}

table caption {
  font-weight: bold;
  margin-bottom: 0.5rem;
}

/* Lists */
ol,
ul {
  padding-left: 3rem;
}

/* Format forms */
textarea,
select,
input {
  font-size: inherit;
  font-family: inherit;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  color: var(--text);
  background: var(--bg);
  border: 1px solid var(--text);
  border-radius: 5px;
  box-shadow: none;
  box-sizing: border-box;
  width: 80%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

/* Add arrow to  */
select {
  background-image: linear-gradient(45deg, transparent 49%, var(--text) 51%),
    linear-gradient(135deg, var(--text) 51%, transparent 49%);
  background-position: calc(100% - 20px), calc(100% - 15px);
  background-size: 5px 5px, 5px 5px;
  background-repeat: no-repeat;
}

select[multiple] {
  background-image: none !important;
}

/* checkbox and radio button style */
input[type="checkbox"],
input[type="radio"] {
  vertical-align: bottom;
  position: relative;
}

input[type="radio"] {
  border-radius: 100%;
}

input[type="checkbox"]:checked,
input[type="radio"]:checked {
  background: var(--accent);
}

input[type="checkbox"]:checked::after {
  /* Creates a rectangle with colored right and bottom borders which is rotated to look like a check mark */
  content: " ";
  width: 0.1em;
  height: 0.25em;
  border-radius: 0;
  position: absolute;
  top: 0.05em;
  left: 0.18em;
  background: transparent;
  border-right: solid var(--bg) 0.08em;
  border-bottom: solid var(--bg) 0.08em;
  font-size: 1.8em;
  transform: rotate(45deg);
}
input[type="radio"]:checked::after {
  /* creates a colored circle for the checked radio button  */
  content: " ";
  width: 0.25em;
  height: 0.25em;
  border-radius: 100%;
  position: absolute;
  top: 0.125em;
  background: var(--bg);
  left: 0.125em;
  font-size: 32px;
}

input [type="text"] {
  font-size: inherit;
  font-family: inherit;
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  color: var(--text);
  background: var(--bg);
  border: 1px solid var(--border);
  border-radius: 5px;
  box-shadow: none;
  box-sizing: border-box;
  width: 60%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}



/* Make the textarea wider than other inputs */
textarea {
  width: 80%;
}

/* Makes input fields wider on smaller screens */
@media only screen and (max-width: 720px) {
  textarea,
  select,
  input {
    width: 100%;
  }
}

/* Ensures the checkbox and radio inputs do not have a set width like other input fields */
input[type="checkbox"],
input[type="radio"] {
  width: auto;
}

/* do not show border around file selector button */
input[type="file"] {
  border: 0;
}

/* Without this any HTML using <fieldset> shows ugly borders and has additional padding/margin. (Issue #3) */
fieldset {
  border: 0;
  padding: 0;
  margin: 0;
}

/* Misc body elements */

hr {
  color: var(--border);
  border-top: 1px;
  margin: 1rem auto;
}

mark {
  padding: 2px 5px;
  border-radius: 4px;
  background: var(--marked);
}

main img,
main video {
  max-width: 100%;
  height: auto;
  border-radius: 5px;
}

/*img{
  max-width: 100%;
  height: auto;
  border-radius: 5px;
}*/

figure {
  margin: 0;
}

figcaption {
  font-size: 0.9rem;
  color: var(--text-light);
  text-align: center;
  margin-bottom: 1rem;
}

blockquote {
  margin: 2rem 0 2rem 2rem;
  padding: 0.4rem 0.8rem;
  border-left: 0.35rem solid var(--accent);
  opacity: 0.8;
  font-style: italic;
}

cite {
  font-size: 0.9rem;
  color: var(--text-light);
  font-style: normal;
}

/* Use mono font for code like elements */
code,
pre,
pre span,
kbd,
samp {
  font-size: 1.075rem;
  font-family: var(--mono-font);
  color: var(--code);
}

kbd {
  color: var(--preformatted);
  border: 1px solid var(--preformatted);
  border-bottom: 3px solid var(--preformatted);
  border-radius: 5px;
  padding: 0.1rem;
}

pre {
  padding: 1rem 1.4rem;
  max-width: 100%;
  overflow: auto;
  overflow-x: auto;
  color: var(--preformatted);
  background: var(--accent-bg);
  border: 1px solid var(--border);
  border-radius: 5px;
}

/* Fix embedded code within pre */
pre code {
  color: var(--preformatted);
  background: none;
  margin: 0;
  padding: 0;
}

::selection {
  background: var(--accent-bg);
  color: var(--bg);
}


.container {
   width: 95%;
   padding: 50px 0;
   margin: 50px auto;
   position: relative;
   overflow: hidden;
}

.container:before {
   content: '';
   position: absolute;
   top: 0;
   left: 10%;
   margin-left: -1px;
   width: 2px;
   height: 100%;
   background: var(--text);
   z-index: 1;
}

.timeline-block {
   width: calc(94% + 3px);
   display: flex;
   justify-content: space-between;
   clear: both;
}

.timeline-block-right {
   float: right;
}

   .marker img {
   max-width: 60px;
   border-radius: 50%;
   border: 2px solid var(--text);
   position: relative;
   z-index: 9999;
   }

.timeline-content {
   width: 100%;
   padding: 0 15px;
   color: var(--text);
}

.timeline-content h3 {
   margin-top: 5px;
   margin-bottom: 5px;
   font-size: 25px;
   font-weight: 800
}

.timeline-content span {
   font-size: calc(var(--base-fontsize) / var(--header-scale));
   margin-top: calc(var(--line-height) * 1.5rem);
   color: var(--text);
}

.timeline-content p {
   color: var(--text);
}


@media screen and (max-width: 768px) {
   .container:before {
      left: 25px;
      width: 2px;
   }
   .timeline-block {
      width: 100%;
      margin-bottom: 30px;
   }
   .timeline-block-right {
      float: none;
   }

   .marker img {
   width: 50px;
   border-radius: 50%;
   border: 2px solid var(--text);
   margin-top: 10px;
   position: relative;
   z-index: 9999;
   }
}

.container-foto {
   width: 100%;
   padding: 0px 0;
   margin: 0px auto;
   position: relative;
   overflow: hidden;
}

.image-grid{
	--gap: 4px;
	--num-cols: 1;
	--row-height: 200px;
	box-sizing: border-box;
	padding: var(--gap);
	display:grid;
	grid-template-columns: repeat(var(--num-cols), 1fr);
	grid-auto-rows: var(--row-height);
	gap: var(--gap);
	align-content: center;
}

.image-grid>img {
	width: auto;
	height:auto;
	object-fit: contain;
}
@media screen and (min-width: 800px) {

.image-grid{
	--gap: 8px;
	--num-cols: 2;
	--row-height: 300px;
	box-sizing: border-box;
	padding: var(--gap);
	display:grid;
	grid-template-columns: repeat(var(--num-cols), 1fr);
	grid-auto-rows: var(--row-height);
	gap: var(--gap);
	align-content: center;
}

.image-grid>img {
	width: auto;
	height:auto;
	object-fit: contain;
}
}
